type level = 'debug' | 'info' | 'warning' | 'error';
type levels = {
	debug: 0;
	info: 1;
	warning: 2;
	error: 3;
};

declare class Logger {
	/**
	 *  Current log level
	 *
	 * @type {types}
	 * @memberof Logger
	 */
	level: level;

	/**
	 * All supported logging levels mapped to a number
	 *
	 * @type {levels}
	 * @memberof Logger
	 */
	levels: levels;

	/**
	 * Get the current time as HH:MM:SS
	 *
	 * @returns {string}
	 * @memberof Logger
	 */
	time(): string;

	/**
	 * Write a message to events.log
	 *
	 * @param {level} type
	 * @param {string} message
	 * @memberof Logger
	 */
	write(type: level, message: string): void;

	/**
	 *  Set the logging level
	 *
	 * @param {level} level
	 * @returns {Logger}
	 * @memberof Logger
	 */
	setLevel(level: level): Logger;

	/**
	 *  Log a debugging message
	 *
	 * @param {string | number | object} message
	 * @memberof Logger
	 */
	debug(message: string | number | object): void;

	/**
	 *  Log an informative message
	 *
	 * @param {string | number | object} message
	 * @memberof Logger
	 */
	info(message: string | number | object): void;

	/**
	 *  Log a warning message
	 *
	 * @param {string | number | object} message
	 * @memberof Logger
	 */
	warning(message: string | number | object): void;

	/**
	 *  Log an error message
	 *
	 * @param {string | number | object} message
	 * @memberof Logger
	 */
	error(message: string | number | object): void;
}

export = new Logger();
